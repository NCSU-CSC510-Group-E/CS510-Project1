I have a tomcat instance setup but the database connection I have configured in context.xml keeps dying after periods of inactivity.

When I check the logs I get the following error:

com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: 
The last packet successfully received from the server was68051 seconds 
ago. The last packet sent successfully to the server was 68051 seconds 
ago, which is longer than the server configured value of 
'wait_timeout'. You should consider either expiring and/or testing 
connection validity before use in your application, increasing the 
server configured values for client timeouts, or using the Connector/J 
connection property 'autoReconnect=true' to avoid this problem.

Here is the configuration in context.xml:

Resource name="dataSourceName" 
        auth="Container" 
        type="javax.sql.DataSource"
        maxActive="100" 
        maxIdle="30" 
        maxWait="10000" 
        username="username" 
        password="********"
        removeAbandoned = "true"
        logAbandoned = "true"
        driverClassName="com.mysql.jdbc.Driver" 
        url="jdbc:mysql://127.0.0.1:3306/databasename?autoReconnect=trueamp;useEncoding=trueamp;characterEncoding=UTF-8"  /


I am using autoReconnect=ture like the error says to do, but the connection keeps dying. I have never seen this happen before.

I have also verified that all database connections are being closed properly.
