Project Darkstar was the topic of the monthly JavaSIG meeting down at the Google offices in NYC last night.  For those that don't know (probably everyone), Project Darkstar is a framework for massively multiplayer online games that attempts to take care of all of the "hard stuff."  The basic idea is that you write your game server logic in such a way that all operations are broken up into tiny tasks.  You pass these tasks to the Project Darkstar framework which handles distributing them to a specific node in the cluster, any concurrency issues, and finally persisting the data.

Apparently doing this kind of thing is a much different problem for video games than it is for enterprise applications.  Jim Waldo, who gave the lecture, claims that MMO games have a DB read/write ratio of 50/50, whereas enterprise apps are more like 90% read, 10% write.  He also claims that most existing MMOs keep everything in memory exlcusively, and only dump to a DB every 6 hours of so.  This means if a server goes down, you would lose all of the work since the last DB dump.

Now, the project itself sounds really cool, but I don't think the industry will accept it.  First, you have to write your server code in Java.  The client code can be written in anything (Jim claims ActionScript 3 is the most popular, follow by C++), but the server stuff has to be Java.  Sounds good to me, but I really get the impression that everyone in the games industry hates Java.

Second, unlike other industries where developers prefer to use existing frameworks and libraries, the guys in the games industry seem to like to write everything themselves.  Not only that, they like to rewrite everything for every new game they produce.  Things are starting to change where developers are using Havok for physics, Unreal Engine 3 as their platform, etc., but for the most part it looks like everything is still proprietary.

So, are the guys at Project Darkstar just wasting their time?  Can a general framework like this really work for complex games with the performance that is required?  Even if it does work, are game companies willing to use it?
